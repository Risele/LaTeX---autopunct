% autopunct.sty --- Automatic punctuation in LaTeX lists
% Author: (Risele)
% License: MIT
\ProvidesPackage{autopunct}[2025/09/22 v1.1 Automatic punctuation in lists according to GOST/other: the last item ends with a period, the rest - with a semicolon.]
%%%% 	 
%%%%     
%%%%     \begin{itemize}
%%%%       \item Point 1\autopunct
%%%%       \item Point 2\autopunct
%%%%       \item Last point\autopunct
%%%%     \end{itemize}
%%%%     
%%%%     
%%%%     \begin{enumerate}
%%%%       \item One\autopunct
%%%%       \item Two\autopunct
%%%%       \item Last\autopunct
%%%%     \end{enumerate}
%%%%     
%%%%     
%%%%     \begin{itemize}
%%%%       \item External 1\autopunct
%%%%       \item External 2:\autopunct
%%%%         \begin{enumerate}
%%%%           \item Internal 1\autopunct
%%%%           \item Internal 2\autopunct
%%%%           \item Internal Last\autopunct
%%%%         \end{enumerate}
%%%%       \item External Last\autopunct
%%%%     \end{itemize}

\RequirePackage{etoolbox}
\RequirePackage{xkeyval}

% === Package options ===
% Defaults: ; and .
\newcommand*\autopunct@sep{;}
\newcommand*\autopunct@endmark{.}

\DeclareOptionX{sep}{\renewcommand*\autopunct@sep{#1}}
\DeclareOptionX{end}{\renewcommand*\autopunct@endmark{#1}}
\ProcessOptionsX\relax

\makeatletter
% --- Sentinels / flags ---
\let\autopunct@none\relax
\newcommand*\autopunct@wait{}   % waiting: separator between items
\newcommand*\autopunct@force{}  % forced final mark
\let\autopunct@initem\relax     % indicator: are we inside a real \item?

% --- Public user commands (LOCAL state per list level) ---
\newcommand*\autopunct{%
	\ifx\autopunct@initem\relax
	% outside of \item -> ignore
	\else
	\let\autopunct@pending\autopunct@wait
	\fi
}
\newcommand*\autopunctforce{%
	\ifx\autopunct@initem\relax
	% outside of \item -> ignore
	\else
	\let\autopunct@pending\autopunct@force
	\fi
}
\newcommand*\apt{\autopunct} % short alias

% --- Initialization at the beginning of environments ---
\AtBeginEnvironment{itemize}{%
	\let\autopunct@pending\autopunct@none
	\let\autopunct@initem\relax
}
\AtBeginEnvironment{enumerate}{%
	\let\autopunct@pending\autopunct@none
	\let\autopunct@initem\relax
}
\AtBeginEnvironment{description}{%
	\let\autopunct@pending\autopunct@none
	\let\autopunct@initem\relax
}

% --- Wrapper around \item with support for [optional argument] ---
\let\AP@origitem\item
\def\item{%
	% If the previous item was marked -> close it with a separator (only in hmode)
	\ifx\autopunct@pending\autopunct@wait
	\ifhmode \unskip\autopunct@sep\par \fi
	\fi
	% Reset state before starting a new item
	\let\autopunct@pending\autopunct@none
	% Branch with/without optional argument
	\@ifnextchar[{ \AP@item@opt }{ \AP@item@no }%
}
\def\AP@item@no{%
	\AP@origitem
	\let\autopunct@initem\autopunct@wait
}
\def\AP@item@opt[#1]{%
	\AP@origitem[{#1}]%
	\let\autopunct@initem\autopunct@wait
}

% --- End of environment: place final punctuation if needed ---
\newcommand*\autopunct@end{%
	\begingroup
	% Only if there was at least one \item in this environment
	\ifx\autopunct@initem\relax
	% no items -> do nothing
	\else
	\ifx\autopunct@pending\autopunct@none
	% last item not marked -> nothing
	\else
	\ifx\autopunct@pending\autopunct@wait
	% normal case: add only in horizontal mode (prevents stray dot lines)
	\ifhmode \unskip\autopunct@endmark\par \fi
	\else
	% forced case: always add, even in vertical mode
	\leavevmode \unskip\autopunct@endmark\par
	\fi
	\fi
	\fi
	\endgroup
	% Reset flags when leaving environment
	\let\autopunct@pending\autopunct@none
	\let\autopunct@initem\relax
}
\AtEndEnvironment{itemize}{\autopunct@end}
\AtEndEnvironment{enumerate}{\autopunct@end}
\AtEndEnvironment{description}{\autopunct@end}
\makeatother



